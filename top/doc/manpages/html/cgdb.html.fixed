  <!-- manual page source format generated by PolyglotMan v3.0.9, -->
<!-- available via anonymous ftp from ftp.cs.berkeley.edu:/ucb/people/phelps/tcltk/rman.tar.Z -->

<HTML>
<HEAD>
<TITLE>cgdb(1L) manual page</TITLE>
</HEAD>
<BODY bgcolor=white>
<A HREF="#toc">Table of Contents</A><P>
 
<H2><A NAME="sect0" HREF="#toc0">Name</A></H2>
    <BR>
 <P>
  <B>cgdb</B> -- Debug (from the service node) a process of a Cplant parallel applic
ation

<H2><A NAME="sect1" HREF="#toc1">Synopsis</A></H2>
    <BR>
 <P>
  <B>cgdb -n </B> <I>nodeNum</I> 
<H2><A NAME="sect2" HREF="#toc2">Description</A></H2>
    <BR>
 <P>
  <B>cgdb</B> allows you to debug a single process of a parallel application.
 You r
un it on the service node and it communicates with the Gnu debugger
<B>gdb</B> on the compute node.  
<P>
To use this feature, run yod with the <I>-attach</I> option.
 This will display the nodes the application has been allocated and will
start a debugging session on each compute node. yod will prompt you before
it allows the application processes to procede to user code.  
<P>
To start a
debugging proxy on the service node which can attach to the debugger on
a compute node, run <B>cgdb</B> with a physical node number from the yod display:
 <P>
<BR>
<PRE>    cgdb -n 24
    
</PRE><P>
 Now you can enter gdb commands to debug the application process. 
<H2><A NAME="sect3" HREF="#toc3">See Also</A></H2>

   <BR>
 <P>
  <B>yod</B> <P>

<HR><P>
<A NAME="toc"><B>Table of Contents</B></A><P>
<UL>
<LI><A NAME="toc0" HREF="#sect0">Name</A></LI>
<LI><A NAME="toc1" HREF="#sect1">Synopsis</A></LI>
<LI><A NAME="toc2" HREF="#sect2">Description</A></LI>
<LI><A NAME="toc3" HREF="#sect3">See Also</A></LI>
</UL>
</BODY></HTML>
