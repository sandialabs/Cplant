/*************************************************************************
Cplant Release Version 2.0.1.10
Release Date: Nov 5, 2002 
#############################################################################
#
#     This Cplant(TM) source code is the property of Sandia National
#     Laboratories.
#
#     This Cplant(TM) source code is copyrighted by Sandia National
#     Laboratories.
#
#     The redistribution of this Cplant(TM) source code is subject to the
#     terms of the GNU Lesser General Public License
#     (see cit/LGPL or http://www.gnu.org/licenses/lgpl.html)
#
#     Cplant(TM) Copyright 1998, 1999, 2000, 2001, 2002 Sandia Corporation. 
#     Under the terms of Contract DE-AC04-94AL85000, there is a non-exclusive
#     license for use of this work by or on behalf of the US Government.
#     Export of this program may require a license from the United States
#     Government.
#
#############################################################################
**************************************************************************/
/*
** $Id: arg-blocks.h,v 1.3 2001/05/24 23:20:32 rbbrigh Exp $
*/
#ifndef PTL_BLOCKS_H
#define PTL_BLOCKS_H

/*
 * blocks.h
 *
 * Argument block types for the Portals 3.0 library
 * Generated by idl
 *
 */

#include <p30/types.h>


typedef struct PtlGetId_in
{
	ptl_handle_ni_t	handle_in;


} PtlGetId_in;

typedef struct PtlGetId_out
{
	int	rc;
	ptl_process_id_t		id_out;
	ptl_id_t			gsize_out;


} PtlGetId_out;


typedef struct PtlTransId_in
{
	ptl_handle_ni_t	handle_in;
	ptl_process_id_t	id_in;


} PtlTransId_in;

typedef struct PtlTransId_out
{
	int	rc;
	ptl_process_id_t		id_out;


} PtlTransId_out;


typedef struct PtlNIStatus_in
{
	ptl_handle_ni_t	interface_in;
	ptl_sr_index_t	register_in;


} PtlNIStatus_in;

typedef struct PtlNIStatus_out
{
	int	rc;
	ptl_sr_value_t			status_out;


} PtlNIStatus_out;


typedef struct PtlNIDist_in
{
	ptl_handle_ni_t	interface_in;
	ptl_process_id_t	process_in;


} PtlNIDist_in;

typedef struct PtlNIDist_out
{
	int	rc;
	unsigned long	distance_out;


} PtlNIDist_out;


typedef struct PtlNIDebug_in
{
	unsigned int	mask_in;


} PtlNIDebug_in;

typedef struct PtlNIDebug_out
{
	unsigned int	rc;


} PtlNIDebug_out;


typedef struct PtlMEAttach_in
{
	ptl_handle_ni_t	interface_in;
	ptl_pt_index_t	index_in;
	ptl_process_id_t	match_id_in;
	ptl_match_bits_t	match_bits_in;
	ptl_match_bits_t	ignore_bits_in;
	ptl_unlink_t	unlink_in;


} PtlMEAttach_in;

typedef struct PtlMEAttach_out
{
	int	rc;
	ptl_handle_me_t			handle_out;


} PtlMEAttach_out;


typedef struct PtlMEInsert_in
{
	ptl_handle_me_t	current_in;
	ptl_process_id_t	match_id_in;
	ptl_match_bits_t	match_bits_in;
	ptl_match_bits_t	ignore_bits_in;
	ptl_unlink_t	unlink_in;
	ptl_ins_pos_t	position_in;


} PtlMEInsert_in;

typedef struct PtlMEInsert_out
{
	int	rc;
	ptl_handle_me_t			handle_out;


} PtlMEInsert_out;


typedef struct PtlMEUnlink_in
{
	ptl_handle_me_t	current_in;


} PtlMEUnlink_in;

typedef struct PtlMEUnlink_out
{
	int	rc;


} PtlMEUnlink_out;


typedef struct PtlTblDump_in
{
	int	index_in;


} PtlTblDump_in;

typedef struct PtlTblDump_out
{
	int	rc;


} PtlTblDump_out;


typedef struct PtlMEDump_in
{
	ptl_handle_me_t	current_in;


} PtlMEDump_in;

typedef struct PtlMEDump_out
{
	int	rc;


} PtlMEDump_out;


typedef struct PtlMDAttach_internal_in
{
	ptl_handle_me_t	current_in;
	ptl_md_t	md_in;
	ptl_unlink_t	unlink_in;


} PtlMDAttach_internal_in;

typedef struct PtlMDAttach_internal_out
{
	int	rc;
	ptl_handle_md_t			handle_out;


} PtlMDAttach_internal_out;


typedef struct PtlMDInsert_internal_in
{
	ptl_handle_md_t	current_in;
	ptl_md_t	md_in;
	ptl_unlink_t	unlink_in;
	ptl_ins_pos_t	position_in;


} PtlMDInsert_internal_in;

typedef struct PtlMDInsert_internal_out
{
	int	rc;
	ptl_handle_md_t			handle_out;


} PtlMDInsert_internal_out;


typedef struct PtlMDBind_internal_in
{
	ptl_handle_ni_t	ni_in;
	ptl_md_t	md_in;


} PtlMDBind_internal_in;

typedef struct PtlMDBind_internal_out
{
	int	rc;
	ptl_handle_md_t			handle_out;


} PtlMDBind_internal_out;


typedef struct PtlMDUpdate_internal_in
{
	ptl_handle_md_t	md_in;
	ptl_handle_eq_t	testq_in;
	ptl_seq_t	sequence_in;

	ptl_md_t			old_inout;
	int old_inout_valid;
	ptl_md_t			new_inout;
	int new_inout_valid;

} PtlMDUpdate_internal_in;

typedef struct PtlMDUpdate_internal_out
{
	int	rc;

	ptl_md_t			old_inout;
	ptl_md_t			new_inout;

} PtlMDUpdate_internal_out;


typedef struct PtlMDUnlink_internal_in
{
	ptl_handle_md_t	md_in;


} PtlMDUnlink_internal_in;

typedef struct PtlMDUnlink_internal_out
{
	int	rc;
	ptl_md_t			status_out;


} PtlMDUnlink_internal_out;


typedef struct PtlEQAlloc_internal_in
{
	ptl_handle_ni_t	ni_in;
	ptl_size_t	count_in;
	void			*	base_in;
	int	len_in;


} PtlEQAlloc_internal_in;

typedef struct PtlEQAlloc_internal_out
{
	int	rc;
	ptl_handle_eq_t			handle_out;


} PtlEQAlloc_internal_out;


typedef struct PtlEQFree_internal_in
{
	ptl_handle_eq_t	eventq_in;


} PtlEQFree_internal_in;

typedef struct PtlEQFree_internal_out
{
	int	rc;


} PtlEQFree_internal_out;


typedef struct PtlACEntry_in
{
	ptl_handle_ni_t	ni_in;
	ptl_ac_index_t	index_in;
	ptl_process_id_t	match_id_in;
	ptl_pt_index_t	portal_in;


} PtlACEntry_in;

typedef struct PtlACEntry_out
{
	int	rc;


} PtlACEntry_out;


typedef struct PtlPut_in
{
	ptl_handle_md_t	md_in;
	ptl_ack_req_t	ack_req_in;
	ptl_process_id_t	target_in;
	ptl_pt_index_t	portal_in;
	ptl_ac_index_t	cookie_in;
	ptl_match_bits_t	match_bits_in;
	ptl_size_t	offset_in;
	ptl_hdr_data_t	hdr_data_in;


} PtlPut_in;

typedef struct PtlPut_out
{
	int	rc;


} PtlPut_out;


typedef struct PtlGet_in
{
	ptl_handle_md_t	md_in;
	ptl_process_id_t	target_in;
	ptl_pt_index_t	portal_in;
	ptl_ac_index_t	cookie_in;
	ptl_match_bits_t	match_bits_in;
	ptl_size_t	offset_in;


} PtlGet_in;

typedef struct PtlGet_out
{
	int	rc;


} PtlGet_out;


#endif
