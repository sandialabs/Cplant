/*************************************************************************
Cplant Release Version 2.0.1.10
Release Date: Nov 5, 2002 
#############################################################################
#
#     This Cplant(TM) source code is the property of Sandia National
#     Laboratories.
#
#     This Cplant(TM) source code is copyrighted by Sandia National
#     Laboratories.
#
#     The redistribution of this Cplant(TM) source code is subject to the
#     terms of the GNU Lesser General Public License
#     (see cit/LGPL or http://www.gnu.org/licenses/lgpl.html)
#
#     Cplant(TM) Copyright 1998, 1999, 2000, 2001, 2002 Sandia Corporation. 
#     Under the terms of Contract DE-AC04-94AL85000, there is a non-exclusive
#     license for use of this work by or on behalf of the US Government.
#     Export of this program may require a license from the United States
#     Government.
#
#############################################################################
**************************************************************************/
/*
** $Id: lib-dispatch.h,v 1.4.6.1 2002/08/19 14:26:42 galagun Exp $
*/
#ifndef PTL_DISPATCH_H
#define PTL_DISPATCH_H

#ifdef __cplusplus
extern "C" {
#endif

/*
 * include/dispatch.h
 *
 * Dispatch table header and externs for remote side
 * operations
 *
 * Generated by idl
 *
 */

#include <lib-p30.h>

typedef struct   {
    int (*fun)(nal_cb_t *nal, void *private_, void *in, void *out);
    char *name;
} dispatch_table_t;

extern dispatch_table_t dispatch_table[];

extern int do_PtlGetId	( nal_cb_t *nal, void *private_, void *args, void *ret);
extern int do_PtlTransId	( nal_cb_t *nal, void *private_, void *args, void *ret);
extern int do_PtlNIStatus	( nal_cb_t *nal, void *private_, void *args, void *ret);
extern int do_PtlNIDist	( nal_cb_t *nal, void *private_, void *args, void *ret);
extern int do_PtlNIDebug	( nal_cb_t *nal, void *private_, void *args, void *ret);
extern int do_PtlMEAttach	( nal_cb_t *nal, void *private_, void *args, void *ret);
extern int do_PtlMEInsert	( nal_cb_t *nal, void *private_, void *args, void *ret);
extern int do_PtlMEUnlink	( nal_cb_t *nal, void *private_, void *args, void *ret);
extern int do_PtlTblDump	( nal_cb_t *nal, void *private_, void *args, void *ret);
extern int do_PtlMEDump	( nal_cb_t *nal, void *private_, void *args, void *ret);
extern int do_PtlMDAttach_internal	( nal_cb_t *nal, void *private_, void *args, void *ret);
extern int do_PtlMDInsert_internal	( nal_cb_t *nal, void *private_, void *args, void *ret);
extern int do_PtlMDBind_internal	( nal_cb_t *nal, void *private_, void *args, void *ret);
extern int do_PtlMDUpdate_internal	( nal_cb_t *nal, void *private_, void *args, void *ret);
extern int do_PtlMDUnlink_internal	( nal_cb_t *nal, void *private_, void *args, void *ret);
extern int do_PtlEQAlloc_internal	( nal_cb_t *nal, void *private_, void *args, void *ret);
extern int do_PtlEQFree_internal	( nal_cb_t *nal, void *private_, void *args, void *ret);
extern int do_PtlACEntry	( nal_cb_t *nal, void *private_, void *args, void *ret);
extern int do_PtlPut	( nal_cb_t *nal, void *private_, void *args, void *ret);
extern int do_PtlGet	( nal_cb_t *nal, void *private_, void *args, void *ret);

/* put LIB_MAX_DISPATCH last here  -- these must match the
   assignements to the dispatch table in lib-p30/dispatch.c */
#if 1
enum{ PTL_GETID, PTL_TRANSID, PTL_NISTATUS, PTL_NIDIST, PTL_NIDEBUG, 
      PTL_MEATTACH, PTL_MEINSERT, PTL_MEUNLINK, PTL_TBLDUMP, 
      PTL_MEDUMP, PTL_MDATTACH, PTL_MDINSERT, PTL_MDBIND, PTL_MDUPDATE, 
      PTL_MDUNLINK, PTL_EQALLOC, PTL_EQFREE, PTL_ACENTRY, PTL_PUT, PTL_GET, 
      LIB_MAX_DISPATCH};
#else
#define LIB_MAX_DISPATCH (20)
#endif

#ifdef __cplusplus
}
#endif

#endif
